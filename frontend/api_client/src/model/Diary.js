/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactEntry from './ContactEntry';
import User from './User';

/**
 * The Diary model module.
 * @module model/Diary
 * @version 1.0
 */
class Diary {
    /**
     * Constructs a new <code>Diary</code>.
     * All details about a diary. 
     * @alias module:model/Diary
     */
    constructor() { 
        
        Diary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Diary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Diary} obj Optional instance to populate.
     * @return {module:model/Diary} The populated <code>Diary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Diary();

            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = ApiClient.convertToType(data['contacts'], [ContactEntry]);
            }
            if (data.hasOwnProperty('cured')) {
                obj['cured'] = ApiClient.convertToType(data['cured'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/ContactEntry>} contacts
 */
Diary.prototype['contacts'] = undefined;

/**
 * @member {Boolean} cured
 */
Diary.prototype['cured'] = undefined;

/**
 * @member {Number} id
 */
Diary.prototype['id'] = undefined;

/**
 * @member {module:model/User} user
 */
Diary.prototype['user'] = undefined;






export default Diary;

