/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ContactEntry from './model/ContactEntry';
import ContactEntryDTO from './model/ContactEntryDTO';
import ContactMethod from './model/ContactMethod';
import ContactMethodDTO from './model/ContactMethodDTO';
import CreateDiaryDTO from './model/CreateDiaryDTO';
import Diary from './model/Diary';
import Duration from './model/Duration';
import Link from './model/Link';
import LocationMatch from './model/LocationMatch';
import ModelAndView from './model/ModelAndView';
import PlaceVisit from './model/PlaceVisit';
import Symptom from './model/Symptom';
import TimeLineObject from './model/TimeLineObject';
import TimelineJsonRoot from './model/TimelineJsonRoot';
import User from './model/User';
import UserDTO from './model/UserDTO';
import View from './model/View';
import BasicErrorControllerApi from './api/BasicErrorControllerApi';
import DiaryControllerApi from './api/DiaryControllerApi';
import LocationDataControllerApi from './api/LocationDataControllerApi';
import OperationHandlerApi from './api/OperationHandlerApi';
import UserControllerApi from './api/UserControllerApi';
import WebMvcLinksHandlerApi from './api/WebMvcLinksHandlerApi';


/**
* Api_Documentation.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiDocumentation = require('index'); // See note below*.
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ContactEntry model constructor.
     * @property {module:model/ContactEntry}
     */
    ContactEntry,

    /**
     * The ContactEntryDTO model constructor.
     * @property {module:model/ContactEntryDTO}
     */
    ContactEntryDTO,

    /**
     * The ContactMethod model constructor.
     * @property {module:model/ContactMethod}
     */
    ContactMethod,

    /**
     * The ContactMethodDTO model constructor.
     * @property {module:model/ContactMethodDTO}
     */
    ContactMethodDTO,

    /**
     * The CreateDiaryDTO model constructor.
     * @property {module:model/CreateDiaryDTO}
     */
    CreateDiaryDTO,

    /**
     * The Diary model constructor.
     * @property {module:model/Diary}
     */
    Diary,

    /**
     * The Duration model constructor.
     * @property {module:model/Duration}
     */
    Duration,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The LocationMatch model constructor.
     * @property {module:model/LocationMatch}
     */
    LocationMatch,

    /**
     * The ModelAndView model constructor.
     * @property {module:model/ModelAndView}
     */
    ModelAndView,

    /**
     * The PlaceVisit model constructor.
     * @property {module:model/PlaceVisit}
     */
    PlaceVisit,

    /**
     * The Symptom model constructor.
     * @property {module:model/Symptom}
     */
    Symptom,

    /**
     * The TimeLineObject model constructor.
     * @property {module:model/TimeLineObject}
     */
    TimeLineObject,

    /**
     * The TimelineJsonRoot model constructor.
     * @property {module:model/TimelineJsonRoot}
     */
    TimelineJsonRoot,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserDTO model constructor.
     * @property {module:model/UserDTO}
     */
    UserDTO,

    /**
     * The View model constructor.
     * @property {module:model/View}
     */
    View,

    /**
    * The BasicErrorControllerApi service constructor.
    * @property {module:api/BasicErrorControllerApi}
    */
    BasicErrorControllerApi,

    /**
    * The DiaryControllerApi service constructor.
    * @property {module:api/DiaryControllerApi}
    */
    DiaryControllerApi,

    /**
    * The LocationDataControllerApi service constructor.
    * @property {module:api/LocationDataControllerApi}
    */
    LocationDataControllerApi,

    /**
    * The OperationHandlerApi service constructor.
    * @property {module:api/OperationHandlerApi}
    */
    OperationHandlerApi,

    /**
    * The UserControllerApi service constructor.
    * @property {module:api/UserControllerApi}
    */
    UserControllerApi,

    /**
    * The WebMvcLinksHandlerApi service constructor.
    * @property {module:api/WebMvcLinksHandlerApi}
    */
    WebMvcLinksHandlerApi
};
